{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Table.svelte"
  ],
  "sourcesContent": [
    "<script>\n\t\n    import Table from \"./Table.svelte\";\n\t\n    let store  = {};\n\tlet editIndex = undefined;\n    let stores = [{\"name\": \"A long, long, long name\", \"address\": \"A much longer address, with street or avenue, city, post code, state, country, and much more, like floor, room, desk....\"}];\n\n\tlet updateStore = () => {\n\t\tstores[editIndex-1] = store;\n\t\tstores = [...stores];\n        store = {};\n\t\teditIndex = undefined;\n\t}\n\n\tlet addStore = () => {\n\t\tstores = [...stores, store];\n        store = {};\n\t}\n\n\tlet removeStore = () => {\n\t\tlet store = stores.splice(selectedStoreId, 1)[0];\n\t\tstores = [...stores];\n        return store;\n\t}\n\n\tlet editStore = () => {\n\t\teditIndex = selectedStoreId+1;\n\t\tstore = {...stores[selectedStoreId]};\n\t}\n\n\tlet cancelEdit = () => {\n        store = {};\n\t\teditIndex = undefined;\n\t}\n\n    let selectedStoreId;\n\n\tfunction handleMessage(event) {\n        selectedStoreId = event.detail.id;\n\t}\n</script>\n\n<body>\n\t<div>\n\t    <input type=\"text\" bind:value={store.name} placeholder=\"Store's name\"> \n\t\t\t<input type=\"text\" bind:value={store.address} placeholder=\"Store's address\"> \n\n\t\t\t{#if editIndex }\n                <button on:click={() => updateStore()}>Edit</button>\n\t\t\t\t<button on:click={() => cancelEdit()}>Cancel</button>\n\t\t\t{:else}\n\t\t\t\t<button on:click={() => addStore()}>Add Store</button>\n\t\t\t{/if}\n\t</div>\n\t<hr/>\n    {#if selectedStoreId != undefined}    \n        <h4>Selected store: {selectedStoreId}</h4>\n        <button on:click={() => editStore()}>Edit</button>\n        <button on:click={() => removeStore()}>Remove</button>\n    {:else}\n        <h4>No Store Selected</h4>\n    {/if}\n\n\t<Table {stores} on:message={handleMessage}/>\n</body>\n\n<style>\n    input,\n    textarea {\n        color: #0f0f0f;\n        display: block;\n        width: 100%;\n        font: inherit;\n        border: none;\n        border-bottom: 2px solid #ccc;\n        border-radius: 3px 3px 0 0;\n        background-color: #55b9f3;\n        padding: 0.15rem 0.25rem;\n        transition: border-color 0.1s ease-out;\n        outline:solid 1px black;\n    }\n    input:focus, textarea:focus{\n        outline:solid 1px blue;\n    }\n    \n    ::placeholder {\n        color: #5b5b5b;\n    }\n    button {\n        border-color: #0f0f0f;\n        border-radius: 20px;\n        background: linear-gradient(145deg, #4da7db, #5bc6ff);\n        box-shadow:  10px 10px 20px #489dcf,\n             -10px -10px 20px #62d5ff;\n    }\n    body {\n        border: none;\n        background-color: #55b9f3;\n    }\n    hr {\n        height: 1px;\n        border: none;\n        background-color: #0f0f0f;\n    }\n</style>\n",
    "<script>\n\texport let stores = [];\n    import { createEventDispatcher } from 'svelte';\n\n\tconst dispatch = createEventDispatcher();\n\n\tfunction sayId(index) {\n\t\tdispatch('message', {\n\t\t\tid: index\n\t\t});\n    }\n</script>\t\n\n    <table class=\"customTable\">\n        <thead>\t\n            <tr>\n                <th>ID</th>\n                <th>Store</th>\n                <th>Address</th>\n            </tr>\n        </thead>\n        <tbody>\n            {#each stores as {name, address}, i}\n\t\t\t    <tr on:click={() => sayId(i)}> \n                    <td>{i}</td>\n                    <td>{name}</td> \n\t\t\t\t    <td>{address}</td> \n\t\t\t    </tr>\n\t\t    {/each}\n        </tbody>\n\t</table>\n\n<style>\n    table.customTable {\n        width: 100%;\n        background-color: #55b9f3;\n        border-collapse: separate;\n        border-width: 2px;\n        border-color: #0f0f0f;\n        border-style: solid;\n        color: #000000;\n    }\n    table.customTable td, table.customTable th {\n        border-width: 2px;\n        border-color: #0f0f0f;\n        border-style: solid;\n        padding: 5px;\n    }\n\n    table.customTable thead {\n        background-color: #55b9f3;\n    }\n    table.customTable td, table.customTable th {\n        border-width: 2px;\n        border-color: #0f0f0f;\n        border-style: solid;\n        padding: 5px;\n    }\n</style>\n"
  ],
  "names": [],
  "mappings": "AAoEI,KAAK,eACI,CAAC,AACN,KAAK,CAAE,OAAO,CACd,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,IAAI,CACX,IAAI,CAAE,OAAO,CACb,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAC7B,aAAa,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAC1B,gBAAgB,CAAE,OAAO,CACzB,OAAO,CAAE,OAAO,CAAC,OAAO,CACxB,UAAU,CAAE,YAAY,CAAC,IAAI,CAAC,QAAQ,CACtC,QAAQ,KAAK,CAAC,GAAG,CAAC,KAAK,AAC3B,CAAC,AACD,oBAAK,MAAM,AAAgB,CAAC,AACxB,QAAQ,KAAK,CAAC,GAAG,CAAC,IAAI,AAC1B,CAAC,eAED,aAAa,AAAC,CAAC,AACX,KAAK,CAAE,OAAO,AAClB,CAAC,AACD,MAAM,eAAC,CAAC,AACJ,YAAY,CAAE,OAAO,CACrB,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,gBAAgB,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CACrD,UAAU,CAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;aAC/B,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,AACjC,CAAC,AACD,IAAI,eAAC,CAAC,AACF,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,OAAO,AAC7B,CAAC,AACD,EAAE,eAAC,CAAC,AACA,MAAM,CAAE,GAAG,CACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,OAAO,AAC7B,CAAC;ACvED,KAAK,YAAY,8BAAC,CAAC,AACf,KAAK,CAAE,IAAI,CACX,gBAAgB,CAAE,OAAO,CACzB,eAAe,CAAE,QAAQ,CACzB,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,OAAO,CACrB,YAAY,CAAE,KAAK,CACnB,KAAK,CAAE,OAAO,AAClB,CAAC,AACD,KAAK,2BAAY,CAAC,iBAAE,CAAE,KAAK,2BAAY,CAAC,EAAE,eAAC,CAAC,AACxC,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,OAAO,CACrB,YAAY,CAAE,KAAK,CACnB,OAAO,CAAE,GAAG,AAChB,CAAC,AAED,KAAK,2BAAY,CAAC,KAAK,eAAC,CAAC,AACrB,gBAAgB,CAAE,OAAO,AAC7B,CAAC,AACD,KAAK,2BAAY,CAAC,iBAAE,CAAE,KAAK,2BAAY,CAAC,EAAE,eAAC,CAAC,AACxC,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,OAAO,CACrB,YAAY,CAAE,KAAK,CACnB,OAAO,CAAE,GAAG,AAChB,CAAC"
}